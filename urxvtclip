# script to copy/paste text in URXVT
#
# This emulates the gnome-terminal behavior: copy to PRIMARY on select,
# copy/paste to/from CLIPBOARD with Shift-Control-C/V
#
# Also copies to clipboard with right click

#!/usr/bin/env perl

# sudo ln -s /home/arne/github/dotfiles/urxvtclip /usr/lib/x86_64-linux-gnu/urxvt/perl

# .Xresources:
# URxvt.keysym.Shift-Control-C: perl:urxvtclip:copy
# URxvt.keysym.Shift-Control-V: perl:urxvtclip:paste
# URxvt.perl-ext-common: default,urxvtclip,selection-to-clipboard


sub copy_to_clipboard {
    my ($self) = @_;
    my $query = $self->selection;
    open (my $pipe, '| /usr/bin/xsel --input --clipboard') or die;
    print $pipe $query;
    close $pipe;
}

sub copy_to_primary {
    my ($self) = @_;
    my $query = $self->selection;
    open (my $pipe, '| /usr/bin/xsel --input --primary') or die;
    print $pipe $query;
    close $pipe;
}

sub paste {
    my ($self) = @_;
    my $str = `/usr/bin/xsel --output --clipboard`;
    if ($? == 0) {
        $self->tt_paste($str);
    } else {
        print STDERR "error running '$self->{paste_cmd}': $!\n";
    }
}

sub on_sel_grab {
    my ($self) = @_;
    $self->copy_to_primary();
}

sub on_button_press {
    my ($self, $event) = @_;
    if ($event->{button} == 3) {
        $self->copy_to_clipboard();
        $self->scr_bell;
    }
}

sub on_user_command {
    my ($self, $cmd) = @_;
    if ($cmd eq "urxvtclip:paste") {
        $self->paste;
    }
    # if ($cmd eq "urxvtclip:copy") {
    #     $self->copy_to_clipboard;
    # }
}
